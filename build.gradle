buildscript {
   ext.kotlin_version = '1.0.5-2'

   repositories {
     mavenCentral()
   }

   dependencies {
     classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
   }
}
/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'linuxuser' at '15/12/16 2:26 PM' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
     mavenCentral()
    jcenter()
   
}

mainClassName = 'HelloKt'

defaultTasks 'run'

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile group: 'com.prowidesoftware', name: 'pw-swift-core', version: 'SRU2016-7.8.5'
  compile 'io.github.microutils:kotlin-logging:1.4.1'
  compile group: 'com.sun.codemodel', name: 'codemodel', version: '2.4'
  compile 'com.beust:klaxon:0.24'
  testCompile 'junit:junit:4.12'
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}
// In this section you declare the dependencies for your production and test code
task wrapper(type: Wrapper) {
  gradleVersion = "3.2.1"
}